{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar AuthService = /** @class */function () {\n  function AuthService(httpClient) {\n    this.httpClient = httpClient;\n    this.AUTH_SERVER = 'http://localhost:3000';\n    this.authSubject = new BehaviorSubject(false);\n  }\n  AuthService.prototype.register = function (user) {\n    var _this = this;\n    return this.httpClient.post(\"\".concat(this.AUTH_SERVER, \"/register\"), user).pipe(tap(function (res) {\n      if (res) {\n        // guardar token\n        _this.saveToken(res.dataUser.accessToken, res.dataUser.expiresIn);\n      }\n    }));\n  };\n  AuthService.prototype.login = function (user) {\n    var _this = this;\n    return this.httpClient.post(\"\".concat(this.AUTH_SERVER, \"/login\"), user).pipe(tap(function (res) {\n      if (res) {\n        // guardar token\n        _this.saveToken(res.dataUser.accessToken, res.dataUser.expiresIn);\n      }\n    }));\n  };\n  AuthService.prototype.logout = function () {\n    this.token = '';\n    localStorage.removeItem(\"ACCESS_TOKEN\");\n    localStorage.removeItem(\"EXPIRES_IN\");\n  };\n  AuthService.prototype.saveToken = function (token, expiresIn) {\n    localStorage.setItem(\"ACCESS_TOKEN\", token);\n    localStorage.setItem(\"EXPIRES_IN\", expiresIn);\n    this.token = token;\n  };\n  AuthService.prototype.getToken = function () {\n    if (!this.token) {\n      this.token = localStorage.getItem(\"ACCESS_TOKEN\");\n    }\n    return this.token;\n  };\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n  return AuthService;\n}();\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}